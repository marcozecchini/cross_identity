{
	"compiler": {
		"version": "0.8.6+commit.11564f7e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "_rlpHeader",
						"type": "bytes"
					},
					{
						"internalType": "uint256",
						"name": "totalDifficulty",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_ethashContractAddr",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "_state",
						"type": "bytes"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "returnCode",
						"type": "uint256"
					}
				],
				"name": "DisputeBlock",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "_startingBlockHash",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "_blockNhash",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "intermediateBlockHash",
						"type": "bytes32"
					}
				],
				"name": "NewAnswer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "_startingBlockHash",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "_blockNhash",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "_blockIntermediateHash",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "_confirmingBlockHash",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "_stateContent",
						"type": "bytes"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_updateLength",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timeout",
						"type": "uint256"
					}
				],
				"name": "NewPendingState",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "_startingBlockHash",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "_blockNhash",
						"type": "bytes32"
					}
				],
				"name": "NewRequest",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "stateRoot",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "blockHash",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "stateContent",
						"type": "bytes"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "smartContractID",
						"type": "address"
					}
				],
				"name": "NewState",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "returnCode",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "errorInfo",
						"type": "uint256"
					}
				],
				"name": "PoWValidationResult",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "getGenesisBlockHash",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "blockHash",
						"type": "bytes32"
					}
				],
				"name": "getLastValidStateHeader",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "blockNumber",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalDifficulty",
						"type": "uint256"
					},
					{
						"internalType": "bytes32",
						"name": "stateRoot",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getState",
				"outputs": [
					{
						"components": [
							{
								"components": [
									{
										"internalType": "uint24",
										"name": "blockNumber",
										"type": "uint24"
									},
									{
										"internalType": "uint232",
										"name": "totalDifficulty",
										"type": "uint232"
									},
									{
										"internalType": "bytes32",
										"name": "stateRoot",
										"type": "bytes32"
									},
									{
										"internalType": "bytes32",
										"name": "hash",
										"type": "bytes32"
									}
								],
								"internalType": "struct StateRelayCore.Header",
								"name": "header",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "identifier",
										"type": "address"
									},
									{
										"internalType": "bytes32",
										"name": "blockchainId",
										"type": "bytes32"
									},
									{
										"internalType": "bool",
										"name": "verified",
										"type": "bool"
									}
								],
								"internalType": "struct StateRelayCore.Identity",
								"name": "submitter",
								"type": "tuple"
							},
							{
								"internalType": "uint64",
								"name": "lockedUntil",
								"type": "uint64"
							},
							{
								"internalType": "address",
								"name": "smartContractId",
								"type": "address"
							},
							{
								"internalType": "bytes",
								"name": "stateContent",
								"type": "bytes"
							}
						],
						"internalType": "struct StateRelayCore.State",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					}
				],
				"name": "isConfirmingHeaderStored",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					}
				],
				"name": "isLastHeaderStored",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Marco Zecchini",
			"kind": "dev",
			"methods": {},
			"title": "StateRelay: A contract enabling cross-blockchain verifications of state transfer",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "You can use this contract for submitting new user state along with block headers, disputing already submitted block headers and         for verifying Merkle Patricia proofs of states",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/StateRelayCore.sol": "StateRelayCore"
		},
		"evmVersion": "berlin",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/MerklePatriciaProof.sol": {
			"keccak256": "0x805b8457db230aa352caaf9d758d8b149fe051bc30e531de340f3d2bd0b91df8",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://0c7dd3ead72250ad6b81b520a65892511bb29ef083987f1818e657f38290661d",
				"dweb:/ipfs/QmYnytfVxgcJU2dPKaEtpKHYzBm6gkwYnuYqtEEyRMtte6"
			]
		},
		"contracts/RLPReader.sol": {
			"keccak256": "0x9ffb35a66049b5230e52bc3088b4b1806627a61de8bbc7042a6e836dd77757a6",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://ff123609519f8040c1a159a49e3f84e1bac4a43b2bf8419903ea77c04ae4de12",
				"dweb:/ipfs/QmPANnRNrTohxsCexjP9JDk2PajSBf4eJ3pca7R2vLYz8K"
			]
		},
		"contracts/StateRelayCore.sol": {
			"keccak256": "0x82a838b1ba4bf2be21bb9cf291199e0af2472bfeb741faf00baa7622e45353f2",
			"license": "MIT",
			"urls": [
				"bzz-raw://265e78dfdbf627341981a8e157be22890b00dae82ce9199d35e6b7ffe8d98ea9",
				"dweb:/ipfs/Qmc8nar4SEQvDzuZfoAXFHW7C75CHEYvWrovCedtSxtLer"
			]
		}
	},
	"version": 1
}